define("lytix_grademonitor/grademonitor",["exports","lytix_helper/widget","core/templates","lytix_helper/percent_rounder","lytix_logs/logs","core/config"],(function(_exports,_widget,_templates,_percent_rounder,_logs,_config){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_widget=_interopRequireDefault(_widget),_templates=_interopRequireDefault(_templates),_percent_rounder=_interopRequireDefault(_percent_rounder);_exports.init=function(contextid,userid,courseid,locale){var dataPromise=_widget.default.getData("local_lytix_lytix_grademonitor_grademonitor_get",{contextid:contextid,courseid:courseid}),stringsPromise=_widget.default.getStrings({lytix_grademonitor:{differing:{empty:"goal_empty",likely:"goal_likely",unlikely:"goal_unlikely",unachievable:"goal_unachievable",fail:"goal_fail",schemeUpdate:"scheme_updated"},identical:["points"]}});locale=_widget.default.convertLocale(locale),Promise.all([stringsPromise,dataPromise]).then((function(values){for(var _optionalsIterator2,_checkedIterator,_optionalsIterator4,_checkedIterator3,strings=values[0],data=values[1],items=data.Items,itemIDs=items.IDs,itemCount=itemIDs.length,itemNames=items.Names,maxScores=items.MaxScores,scores=null==items?void 0:items.Scores,averages=null==items?void 0:items.ClassAvgs,estimations=null==items?void 0:items.Estimations,optionalIndexes=null==items?void 0:items.OptionalIndexes,checkedIndexes=null==items?void 0:items.CheckedIndexes,totalPoints=0,totalMandatoryPoints=0,_optionalsIterator=null==optionalIndexes?void 0:optionalIndexes.values(),_optionalIndex=null==_optionalsIterator?void 0:_optionalsIterator.next().value,i=0;i<itemCount;++i)totalPoints+=maxScores[i],i!=_optionalIndex?totalMandatoryPoints+=maxScores[i]:_optionalIndex=null==_optionalsIterator?void 0:_optionalsIterator.next().value;var view={table:new Array(itemCount),showAverage:data.ShowAverage,gradeCompletion:0,currentGrade:0,selfEstimation:0,average:0,goalSelection:[{grade:1},{grade:2},{grade:3},{grade:4}]};data.Goal&&(view.goalSelection[data.Goal-1].selected=!0),data.LastSchemeUpdate&&(view.schemeNotification=strings.schemeUpdate+new Date(1e3*data.LastSchemeUpdate).toLocaleDateString(locale));for(var scheme=data.Scheme,gradeFromPercent=function(percent){if(percent>=scheme[3])return 1;for(var i=0;percent>=scheme[i];)++i;return 5-i},gradeFromScore=function(score,maxScore){return gradeFromPercent(score/maxScore*100)},format=new Intl.NumberFormat(locale,{maximumFractionDigits:1}).format,weightRounder=new _percent_rounder.default,optionalsIterator=null==optionalIndexes?void 0:optionalIndexes.values(),checkedIterator=null==checkedIndexes?void 0:checkedIndexes.values(),optionalIndex=null===(_optionalsIterator2=optionalsIterator)||void 0===_optionalsIterator2?void 0:_optionalsIterator2.next().value,checkedIndex=null===(_checkedIterator=checkedIterator)||void 0===_checkedIterator?void 0:_checkedIterator.next().value,_i=0;_i<itemCount;++_i){var _checkedIterator2,_optionalsIterator3,maxScore=maxScores[_i],score=null==scores?void 0:scores[_i],average=null==averages?void 0:averages[_i],estimation=null==estimations?void 0:estimations[_i],assessed=void 0!==score&&score>=0,weight=maxScore/totalMandatoryPoints*100,optional=_i===optionalIndex,checked=_i===checkedIndex,item=view.table[_i]={itemName:itemNames[_i],index:_i,assessed:assessed,checked:assessed||checked,optional:optional,value:0};if(checked)checkedIndex=null===(_checkedIterator2=checkedIterator)||void 0===_checkedIterator2?void 0:_checkedIterator2.next().value;if(void 0!==average&&average>=0&&(item.average=optional?format(average)+strings.points:format(gradeFromScore(average,maxScore))),optional)optionalIndex=null===(_optionalsIterator3=optionalsIterator)||void 0===_optionalsIterator3?void 0:_optionalsIterator3.next().value,item.weight=Math.round(weight),void 0!==estimation&&estimation>=0&&(item.estimation=format(maxScore/100*estimation),item.value=estimation),assessed&&(item.result=format(score),item.value=score/maxScore*100);else if(item.weight=weightRounder.round(weight),item.estimation=void 0!==estimation&&estimation>=0&&gradeFromPercent(estimation),assessed){view.gradeCompletion+=weight;var percent=item.value=score/maxScore*100;item.result=format(gradeFromPercent(percent))}else void 0!==estimation&&estimation>=0&&(item.value=estimation,item.estimation=gradeFromPercent(estimation))}view.gradeCompletion=format(view.gradeCompletion);var accumulatedMax={score:0,estimate:0,average:0},accumulatedScore=0,accumulatedOptionalScore=0,accumulatedAverage=0,accumulatedEstimation=0,accumulatedOptionalEstimation=0,remainingPoints=totalPoints,remainingMandatoryPoints=totalMandatoryPoints,indexToEstimate={};optionalIndex=null===(_optionalsIterator4=optionalsIterator=null==optionalIndexes?void 0:optionalIndexes.values())||void 0===_optionalsIterator4?void 0:_optionalsIterator4.next().value,checkedIndex=null===(_checkedIterator3=checkedIterator=null==checkedIndexes?void 0:checkedIndexes.values())||void 0===_checkedIterator3?void 0:_checkedIterator3.next().value;for(var _i2=0;_i2<itemCount;++_i2){var _maxScore=maxScores[_i2],_score=null==scores?void 0:scores[_i2],_average=null==averages?void 0:averages[_i2],_optional=_i2===optionalIndex;if(_optional&&(optionalIndex=optionalsIterator.next().value),void 0!==_average&&_average>=0&&(accumulatedAverage+=_average,_optional||(accumulatedMax.average+=_maxScore)),void 0!==_score&&_score>=0)accumulatedScore+=_score,accumulatedEstimation+=_score,_optional?(accumulatedOptionalScore+=_score,accumulatedOptionalEstimation+=_score):(accumulatedMax.score+=_maxScore,accumulatedMax.estimate+=_maxScore,remainingMandatoryPoints-=_maxScore),remainingPoints-=_maxScore;else{var _estimation=null==estimations?void 0:estimations[_i2],estimated=void 0!==_estimation&&_estimation>=0;if(estimated&&(indexToEstimate[_i2]=_estimation),_i2===checkedIndex&&(checkedIndex=checkedIterator.next().value,estimated)){var estimatedScore=_maxScore/100*_estimation;accumulatedEstimation+=estimatedScore,_optional?accumulatedOptionalEstimation+=estimatedScore:accumulatedMax.estimate+=_maxScore}}}view.average=void 0!==averages&&averages.length>0?format(gradeFromScore(accumulatedAverage,accumulatedMax.average)):"–";var currentEstimatedGrade,anyScores=void 0!==scores&&scores.length>0,getEffectiveGrade=function(accumulatedPoints,accumulatedOptionalPoints,accumulatedMaxPoints){var mandatoryGrade=gradeFromScore(accumulatedPoints-accumulatedOptionalPoints,accumulatedMaxPoints);return mandatoryGrade<5?gradeFromScore(accumulatedPoints,accumulatedMaxPoints):mandatoryGrade};if(view.currentGrade=anyScores?format(getEffectiveGrade(accumulatedScore,accumulatedOptionalScore,accumulatedMax.score)):"–",(null==checkedIndexes?void 0:checkedIndexes.length)>0&&(null==estimations?void 0:estimations.length)>0||anyScores){var effectiveEstimation=getEffectiveGrade(accumulatedEstimation,accumulatedOptionalEstimation,accumulatedMax.estimate);view.selfEstimation=format(currentEstimatedGrade=effectiveEstimation)}else view.selfEstimation="–";var bestPossibleGrade,currentGoalClass="",bestPossibleMandatoryGrade=gradeFromScore(accumulatedScore-accumulatedOptionalScore+remainingMandatoryPoints,totalMandatoryPoints);bestPossibleGrade=bestPossibleMandatoryGrade<5?gradeFromScore(accumulatedScore+remainingPoints,totalMandatoryPoints):bestPossibleMandatoryGrade;var _data$Goal,getGoalStatus=function(goal){return 0===goal?{message:strings.empty,class:"alert-warning"}:goal>=bestPossibleGrade?void 0!==currentEstimatedGrade&&goal>=currentEstimatedGrade?{message:strings.likely,class:"alert-success"}:{message:strings.unlikely,class:"alert-warning"}:bestPossibleGrade<5?{message:strings.unachievable,class:"alert-danger"}:{message:strings.fail,class:"alert-danger"}},status=getGoalStatus(null!==(_data$Goal=data.Goal)&&void 0!==_data$Goal?_data$Goal:0);return view.goalStatus=status.message,view.goalClass=currentGoalClass=status.class,_templates.default.render("lytix_grademonitor/grademonitor",view).then((function(html){var _document$getElementB;_widget.default.getContentContainer("grademonitor").insertAdjacentHTML("beforeend",html);var widget=document.getElementById("grademonitor"),finalEstimationLabel=widget.querySelector(".final-estimation"),checkboxes=widget.querySelectorAll("td input[type=checkbox]"),itemEstimationLabels=widget.querySelectorAll("td.estimation"),hasChanged={estimations:!1,checked:!1},updated={estimations:{},checked:{}},logs=[],log=(0,_logs.makeLoggingFunction)(userid,courseid,contextid,"grademonitor"),complexKeys=["estimations","checked"],simpleKeys=data.LastSchemeUpdate?["goal","showAverage","schemeUpdateSeen"]:["goal","showAverage"],beaconUrl=_config.wwwroot+"/local/lytix/modules/grademonitor/endpoint/grademonitor_update.php",saveData=function(){if(null!==timeoutId){for(var changes={},_i3=0;_i3<2;++_i3){var key=complexKeys[_i3];hasChanged[key]&&(changes[key]=updated[key],updated[key]={},hasChanged[key]=!1)}for(var _i4=simpleKeys.length-1;_i4>=0;--_i4){var _key=simpleKeys[_i4];void 0!==updated[_key]&&(changes[_key]=updated[_key],updated[_key]=void 0)}for(var logCount=logs.length,_i5=0;_i5<logCount;++_i5){var l=logs[_i5];log(l[0],l[1],l[2],l[3])}logs=[],navigator.sendBeacon(beaconUrl,JSON.stringify({contextid:contextid,courseid:courseid,changes:changes})),timeoutId=null}},timeoutId=null,queueUpdate=function(){clearTimeout(timeoutId),timeoutId=setTimeout(saveData,12e4)},optionalIndexeSet=new Set(optionalIndexes),accumulatedMaxScore=accumulatedMax.estimate;widget.querySelector("table").addEventListener("input",(function(event){var _indexToEstimate$item,target=event.target,row=target;do{row=row.parentElement}while(null==row.dataset.index);var itemIndex=parseInt(row.dataset.index),itemId=itemIDs[itemIndex],maxScore=maxScores[itemIndex],currentEstimation=null!==(_indexToEstimate$item=indexToEstimate[itemIndex])&&void 0!==_indexToEstimate$item?_indexToEstimate$item:0,optional=optionalIndexeSet.has(itemIndex),checkbox=checkboxes[itemIndex],isCheckboxEvent="checkbox"==target.type,checkboxChanged=isCheckboxEvent;if(isCheckboxEvent||checkbox.checked||(checkboxChanged=checkbox.checked=!0),checkboxChanged){hasChanged.checked=!0;var sign=(updated.checked[itemId]=checkbox.checked)?1:-1;optional||(accumulatedMaxScore+=maxScore*sign),accumulatedEstimation+=maxScore/100*currentEstimation*sign,checkbox.checked?row.classList.remove("unchecked"):row.classList.add("unchecked"),logs.push([checkbox.checked?"INCLUDE":"EXCLUDE","ITEM",null,itemId])}if(!isCheckboxEvent){hasChanged.estimations=!0;var newEstimation=indexToEstimate[itemIndex]=updated.estimations[itemId]=parseInt(target.value),_scoreDelta=maxScore/100*(newEstimation-currentEstimation);accumulatedEstimation+=_scoreDelta,optional?(itemEstimationLabels[itemIndex].innerText=format(maxScore/100*newEstimation)+strings.points,accumulatedOptionalEstimation+=_scoreDelta):itemEstimationLabels[itemIndex].innerText=format(gradeFromPercent(newEstimation)),logs.push(["CHANGE","ESTIMATION",newEstimation,itemId])}var previousEstimatedGrade=currentEstimatedGrade;if(accumulatedMaxScore>0){var _effectiveEstimation=getEffectiveGrade(accumulatedEstimation,accumulatedOptionalEstimation,accumulatedMaxScore);finalEstimationLabel.innerText=format(_effectiveEstimation),currentEstimatedGrade=_effectiveEstimation}else finalEstimationLabel.innerText="–",currentEstimatedGrade=void 0;currentGoal&&currentEstimatedGrade!==previousEstimatedGrade&&updateGoalStatus(),queueUpdate()}));var classAverages=widget.querySelectorAll(".class-average"),nameCol=document.querySelector("col.name"),averageCol=data.ShowAverage?document.querySelector("col.average"):document.createElement("col");data.ShowAverage||averageCol.classList.add("average"),document.getElementById("show-average-control").addEventListener("change",(function(event){for(var _i6=classAverages.length-1;_i6>=0;--_i6)classAverages[_i6].classList.toggle("d-none");(updated.showAverage=data.ShowAverage=!data.ShowAverage)?nameCol.insertAdjacentElement("afterend",averageCol):averageCol.parentElement.removeChild(averageCol),logs.push([event.target.checked?"SHOW":"HIDE","COURSE AVERAGE"]),queueUpdate()}));var currentGoal=data.Goal,goalElement=document.getElementById("grade-goal"),goalStatus=document.getElementById("goal-status"),updateGoalStatus=function(){var goal=arguments.length>0&&void 0!==arguments[0]?arguments[0]:currentGoal,status=getGoalStatus(goal);goalStatus.innerText=status.message,goalElement.classList.remove(currentGoalClass),goalElement.classList.add(currentGoalClass=status.class)};goalElement.addEventListener("change",(function(event){updateGoalStatus(currentGoal=updated.goal=parseInt(event.target.value)),logs.push(["CHANGE","GOAL",currentGoal]),queueUpdate()})),null===(_document$getElementB=document.getElementById("dismiss-scheme-update"))||void 0===_document$getElementB||_document$getElementB.addEventListener("click",(function(event){updated.schemeUpdateSeen=!0,queueUpdate(),event.target.parentElement.remove()}),{once:!0}),window.addEventListener("beforeunload",saveData)}))})).finally((function(){document.getElementById("grademonitor").classList.remove("loading")})).catch((function(error){return _widget.default.handleError(error,"grademonitor")}))}}));

//# sourceMappingURL=grademonitor.min.js.map